#Snakefile
configfile: "config.yaml"

SAMPLES = ["A", "B"]

rule all:
    input:
        expand("mapped_reads/{sample}.bam", sample=SAMPLES),
        expand("sorted_reads/{sample}.bam.bai", sample=SAMPLES)
        "calls/all.vcf"

rule bwa_index:
    input:
        "data/genome.fa"
    output:
        "data/genome.fa.bwt"
    conda:
        config["conda_env"]
    shell:
        """
        bwa index {input}
        """

rule bwa_map:
    input:
        genome="data/genome.fa",
        fastq="data/samples/{sample}.fastq",
        index="data/genome.fa.bwt"
    output:
        "mapped_reads/{sample}.bam"
    conda:
        config["conda_env"]
    shell:
        """
        bwa mem {input.genome} {input.fastq} > mapped_reads/{wildcards.sample}.sam
        samtools view -Sb mapped_reads/{wildcards.sample}.sam > {output}
        rm mapped_reads/{wildcards.sample}.sam
        """

rule samtools_sort:
    input:
        "mapped_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam"
    conda:
        config["conda_env"]
    shell:
        "samtools sort -T sorted_reads/{wildcards.sample} -O bam {input} > {output}"

rule samtools_index:
    input:
        "sorted_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam.bai"
    conda:
        config["conda_env"]
    shell:
        "samtools index {input}"

rule bcftools_call:
    input:
        fa="data/genome.fa",
        bam=expand("sorted_reads/{sample}.bam", sample=SAMPLES),
        bai=expand("sorted_reads/{sample}.bam.bai", sample=SAMPLES)
    output:
        "calls/all.vcf"
    conda:
        config["conda_env"]
    shell:
        "bcftools mpileup -f {input.fa} {input.bam} | bcftools call -mv - > {output}"
