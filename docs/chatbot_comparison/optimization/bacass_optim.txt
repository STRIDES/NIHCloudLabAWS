Optimize this bash script to improve its efficiency, readability, and error handling: 

```
#!/bin/bash

# Directory containing the input FASTQ files
INPUT_DIR="/home/ramsivakumar/nextflow_conversion/fastq"
OUTPUT_DIR="/home/ramsivakumar/nextflow_conversion/test_out_bash"

# Create output directories for the tools
mkdir -p "$OUTPUT_DIR/fastp_output" "$OUTPUT_DIR/fastqc_output" "$OUTPUT_DIR/unicycler_output"

# Loop over the files in the input directory
  fastq_file_r1="$INPUT_DIR/${sample_name}_R1_001.fastq.gz"
  fastq_file_r2="$INPUT_DIR/${sample_name}_R2_001.fastq.gz"

  # Check if the R2 file exists
  if [[ ! -f "$fastq_file_r2" ]]; then
    echo "Warning: Corresponding R2 file for $fastq_file_r1 not found. Skipping this pair."
    continue
  fi

  # Step 1: Run fastp
  fastp_output_r1="$OUTPUT_DIR/fastp_output/${sample_name}_R1.fastp.fastq"
  fastp_output_r2="$OUTPUT_DIR/fastp_output/${sample_name}_R2.fastp.fastq"
  fastp -i "$fastq_file_r1" -I "$fastq_file_r2" -o "$fastp_output_r1" -O "$fastp_output_r2"

  # Step 2: Run fastqc on the fastp output
  fastqc_output_dir="$OUTPUT_DIR/fastqc_output/${sample_name}_fastqc"
  mkdir -p "$fastqc_output_dir"
  fastqc "$fastp_output_r1" "$fastp_output_r2" -o "$fastqc_output_dir"

  # Step 3: Run multiqc
  multiqc_output_dir="$OUTPUT_DIR/multiqc_output"
  mkdir -p "$multiqc_output_dir"
  multiqc "$fastqc_output_dir" -o "$multiqc_output_dir"

  # Step 4: Run unicycler on the fastp output
  unicycler_output_dir="$OUTPUT_DIR/unicycler_output/${sample_name}_unicycler"
  mkdir -p "$unicycler_output_dir"
  unicycler -1 "$fastp_output_r1" -2 "$fastp_output_r2" -o "$unicycler_output_dir"

  echo "Finished processing $sample_name."
done

echo "All files processed."
```
